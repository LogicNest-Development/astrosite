---
type Product = {
  title: string;
  price?: number;
  features?: string[];
  badge?: string;
  image?: string;

  // NEW
  purchaseUrl?: string;              // product-level link (e.g., BOSS cart URL)
  ctaLabel?: string;                 // defaults to "Purchase now"
  groupDefaultPurchaseUrl?: string;  // fallback from the group (optional)
};

const { product } = Astro.props as { product: Product };

// resolve final URL and button label
const finalUrl =
  product.purchaseUrl ??
  product.groupDefaultPurchaseUrl ??
  "/contact";

const ctaText = product.ctaLabel ?? "Purchase now";
---

<article class="rounded-2xl border border-white/10 p-6 shadow-ring flex flex-col bg-black/20">
  {product.badge && (
    <span class="mb-3 inline-block rounded-full border border-white/15 px-3 py-1 text-xs opacity-90">
      {product.badge}
    </span>
  )}

  <h3 class="text-xl font-semibold">{product.title}</h3>

  {typeof product.price === "number" && (
    <div class="mt-2 text-3xl font-bold">${product.price.toFixed(2)}</div>
  )}

  {product.image && (
    <img
      src={product.image}
      alt={product.title}
      class="mt-4 rounded-xl border border-white/10"
      loading="lazy"
      decoding="async"
    />
  )}

  {product.features?.length ? (
    <ul class="mt-4 list-disc pl-5 text-muted space-y-1">
      {product.features.map((f) => <li>{f}</li>)}
    </ul>
  ) : null}

  <div class="mt-auto pt-6">
    <a
      href={finalUrl}
      class="btn-primary inline-flex"
      rel="noopener"
    >
      {ctaText}
    </a>
  </div>
</article>
